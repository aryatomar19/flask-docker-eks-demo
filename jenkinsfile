pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'  // change this to your region
        AWS_ACCOUNT_ID = '450460062983'  // change this to your AWS Account ID
        ECR_REPOSITORY = 'flask-app'
        IMAGE_TAG = 'latest'
        ECR_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/aryatomar19/flask-docker-eks-demo.git' // Replace with your repo URL
            }
        }

        stage('Authenticate with ECR') {
            steps {
                script {
                    sh """
                       aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 450460062983.dkr.ecr.us-east-1.amazonaws.com
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t flask-app  ."
            }
        }

        stage('Tag Docker Image') {
            steps {
                sh "docker tag flask-app:latest 450460062983.dkr.ecr.us-east-1.amazonaws.com/flask-app:latest}"
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                sh "docker push 450460062983.dkr.ecr.us-east-1.amazonaws.com/flask-app:latest}"
            }
        }

        // Optional: Deploy to EKS (you can add kubectl apply here)
    }

    post {
        success {
            echo '✅ Docker Image successfully pushed to ECR!'
        }
        failure {
            echo '❌ Build failed.'
        }
    }
}
